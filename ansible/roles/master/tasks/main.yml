---
- name: create required local directories
  delegate_to: localhost
  become: no
  file:
    path: "{{ master.wd.local }}/tls/etcd"
    state: directory

- name: download database certificates
  delegate_to: "{{ groups['db'][0] }}"
  fetch:
    src: /etc/kubernetes/pki/{{ item }}
    dest: "{{ master.wd.local }}/tls/{{ item }}"
    flat: yes
  with_items:
    - etcd/ca.crt
    - apiserver-etcd-client.crt
    - apiserver-etcd-client.key

- name: create required remote directories
  file:
    path: "/etc/kubernetes/pki/etcd"
    state: directory

- name: add database certificates
  copy:
    src: "{{ master.wd.local }}/tls/{{ item }}"
    dest: "/etc/kubernetes/pki/{{ item }}"
  with_items:
    - etcd/ca.crt
    - apiserver-etcd-client.crt
    - apiserver-etcd-client.key

- name: add configuration
  template:
    src: etc/kubernetes/kubeadm-config.yml.j2
    dest: /etc/kubernetes/kubeadm-config.yml

- name: initialize cluster
  shell: "kubeadm init --config=/etc/kubernetes/kubeadm-config.yml --upload-certs > kubeadm.log"
  args:
    chdir: $HOME
    creates: kubeadm.log

- name: create configuration directory
  file:
    path: /home/admin/.kube
    state: directory
    mode: "0755"
    owner: admin
    group: sudo

- name: copy cluster configuration
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/admin/.kube/config
    remote_src: yes
    owner: admin
    group: sudo

- name: apply network
  block:

    - name: wait for cluster
      command: kubectl cluster-info
      register: cluster_info
      until: ("Kubernetes control plane" in cluster_info.stdout) and ("is running" in cluster_info.stdout)
      retries: 30
      delay: 20

    - name: install network
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

  become_user: admin
  become: yes
