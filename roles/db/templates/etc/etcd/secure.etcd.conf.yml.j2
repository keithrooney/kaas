# This is the configuration file for the etcd server.

# Human-readable name for this member.
name: etcd-{{ ansible_host }}

# Path to the data directory.
data-dir: /var/lib/etcd

# List of comma separated URLs to listen on for peer traffic.
listen-peer-urls: https://{{ ansible_host }}:2380

# List of comma separated URLs to listen on for client traffic.
listen-client-urls: https://{{ ansible_host }}:2379,https://127.0.0.1:2379

# List of this member's peer URLs to advertise to the rest of the cluster.
# The URLs needed to be a comma-separated list.
initial-advertise-peer-urls: https://{{ ansible_host }}:2380

# List of this member's client URLs to advertise to the public.
# The URLs needed to be a comma-separated list.
advertise-client-urls: https://{{ ansible_host }}:2379

# Initial cluster configuration for bootstrapping.
initial-cluster: {% for host in groups['db']  %}etcd-{{ host }}=https://{{ host }}:2380{% if not loop.last %},{% endif %}{% endfor %}

# Initial cluster token for the etcd cluster during bootstrap.
initial-cluster-token: 'etcd-cluster'

# Initial cluster state ('new' or 'existing').
initial-cluster-state: 'new'

# Valid values include 'on', 'readonly', 'off'
proxy: 'off'

client-transport-security:
  # Path to the client server TLS cert file.
  cert-file: /etc/etcd/ssl/server.crt

  # Path to the client server TLS key file.
  key-file: /etc/etcd/ssl/server.key

  # Path to the client server TLS trusted CA cert file.
  trusted-ca-file: /etc/etcd/ssl/ca.crt

peer-transport-security:
  # Path to the peer server TLS cert file.
  cert-file: /etc/etcd/ssl/server.crt

  # Path to the peer server TLS key file.
  key-file: /etc/etcd/ssl/server.key

  # Path to the peer server TLS trusted CA cert file.
  trusted-ca-file: /etc/etcd/ssl/ca.crt

# Enable debug-level logging for etcd.
log-level: debug

logger: zap

# Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd.
log-outputs: [stderr]

auto-compaction-retention: "1"