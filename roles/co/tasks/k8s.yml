---
- name: (k8s) create required directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /usr/local/bin
    - /etc/systemd/system/kubelet.service.d

- name: (k8s) download binaries
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/{{ k8s.version }}/bin/linux/amd64/{{ item }}"
    dest: /usr/local/bin
  with_items:
    - kubeadm
    - kubelet
    - kubectl

- name: (k8s) update binary permissions
  file:
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
  with_items:
    - kubeadm
    - kubelet
    - kubectl

- name: (k8s) download configurations
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
  with_items:
    - url: "https://raw.githubusercontent.com/kubernetes/release/v0.4.0/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service"
      dest: /etc/systemd/system/kubelet.service
    - url: "https://raw.githubusercontent.com/kubernetes/release/v0.4.0/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf"
      dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

- name: (k8s) modify configurations
  replace:
    path: "{{ item }}"
    regexp: "/usr/bin"
    replace: "/usr/local/bin"
  with_items:
    - /etc/systemd/system/kubelet.service
    - /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

- name: (k8s) enable kubelet
  systemd:
    name: kubelet
    state: started
    enabled: yes

- name: (k8s) configure port(s)
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port }}"
    proto: "{{ item.protocol }}"
  with_items:
    - rule: allow
      port: 6443
      protocol: tcp

- name: (k8s) configure master(s)
  block:

    - name: (k8s) initialize cluster
      shell: "kubeadm init --cri-socket=/run/containerd/containerd.sock --apiserver-advertise-address={{ ansible_default_ipv4.address }} --node-name={{ ansible_default_ipv4.address }} --pod-network-cidr=10.244.0.0/16 > kubeadm.log"
      args:
        chdir: $HOME
        creates: kubeadm.log

    - name: (k8s) create configuration directory
      become_user: admin
      become: yes
      file:
        path: $HOME/.kube
        state: directory
        mode: "0755"

    - name: (k8s) copy cluster configuration
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/admin/.kube/config
        remote_src: yes
        owner: admin
        group: sudo

    - name: (k8s) wait until cluster is ready
      command: kubectl cluster-info
      register: cluster_info
      until: ("Kubernetes control plane" in cluster_info.stdout) and ("is running" in cluster_info.stdout)
      become_user: admin
      become: no
      retries: 30
      delay: 20
      args:
        chdir: $HOME

    - name: (k8s) install network
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      become_user: admin
      become: yes
      args:
        chdir: $HOME

  when: "'masters' in group_names"

- name: (k8s) configure worker(s)
  block:

    - name: (k8s) generate join command
      shell: kubeadm token create --print-join-command
      register: join_command_output
      delegate_to: "{{ groups['masters'][0] }}"

    - name: (k8s) add worker(s)
      shell: "{{ join_command_output.stdout }} --node-name={{ ansible_default_ipv4.address }} > node_joined.log"
      args:
        chdir: $HOME
        creates: node_joined.log

  when: "'workers' in group_names"
