---
- hosts: all
  remote_user: admin
  become: yes
  roles:
    - co
  vars:
    ansible_ssh_private_key_file: /home/krooney/.ssh/admin/id_ecdsa

- hosts: masters
  remote_user: admin
  become: yes
  tasks:

    - name: initialize cluster
      shell: "kubeadm init --cri-socket=/run/containerd/containerd.sock --node-name={{ ansible_default_ipv4.address }}"

    - name: create configuration directory
      become_user: admin
      become: yes
      file:
        path: $HOME/.kube
        state: directory
        mode: "0755"

    - name: copy cluster configuration
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/admin/.kube/config
        remote_src: yes
        owner: admin
        group: sudo

    - name: wait until cluster is ready
      command: kubectl cluster-info
      register: cluster_info
      until: ("Kubernetes control plane" in cluster_info.stdout) and ("is running" in cluster_info.stdout)
      become_user: admin
      become: no
      retries: 30
      delay: 20
      args:
        chdir: $HOME

    - name: install network
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      become_user: admin
      become: yes
      args:
        chdir: $HOME

- hosts: workers
  remote_user: admin
  become: yes
  tasks:

    - name: generate join command
      shell: kubeadm token create --print-join-command
      register: join_command_output
      delegate_to: "{{ groups['masters'][0] }}"

    - name: add worker(s)
      shell: "{{ join_command_output.stdout }} --node-name={{ ansible_default_ipv4.address }} > node_joined.log"
      args:
        chdir: $HOME
        creates: node_joined.log

  vars:
    ansible_ssh_private_key_file: /home/krooney/.ssh/admin/id_ecdsa
